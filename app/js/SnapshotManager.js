// Generated by CoffeeScript 1.7.1
(function() {
  var ObjectId, SnapshotManager, db, _ref;

  _ref = require("./mongojs"), db = _ref.db, ObjectId = _ref.ObjectId;

  module.exports = SnapshotManager = {
    recordSnapshot: function(project_id, doc_id, version, pathname, lines, ranges, callback) {
      var error;
      try {
        project_id = ObjectId(project_id);
        doc_id = ObjectId(doc_id);
      } catch (_error) {
        error = _error;
        return callback(error);
      }
      return db.docSnapshots.insert({
        project_id: project_id,
        doc_id: doc_id,
        version: version,
        lines: lines,
        pathname: pathname,
        ranges: SnapshotManager.jsonRangesToMongo(ranges),
        ts: new Date()
      }, callback);
    },
    jsonRangesToMongo: function(ranges) {
      var change, comment, updateMetadata, _i, _j, _len, _len1, _ref1, _ref2, _ref3;
      if (ranges == null) {
        return null;
      }
      updateMetadata = function(metadata) {
        if ((metadata != null ? metadata.ts : void 0) != null) {
          metadata.ts = new Date(metadata.ts);
        }
        if ((metadata != null ? metadata.user_id : void 0) != null) {
          return metadata.user_id = SnapshotManager._safeObjectId(metadata.user_id);
        }
      };
      _ref1 = ranges.changes || [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        change = _ref1[_i];
        change.id = SnapshotManager._safeObjectId(change.id);
        updateMetadata(change.metadata);
      }
      _ref2 = ranges.comments || [];
      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
        comment = _ref2[_j];
        comment.id = SnapshotManager._safeObjectId(comment.id);
        if (((_ref3 = comment.op) != null ? _ref3.t : void 0) != null) {
          comment.op.t = SnapshotManager._safeObjectId(comment.op.t);
        }
        updateMetadata(comment.metadata);
      }
      return ranges;
    },
    _safeObjectId: function(data) {
      var error;
      try {
        return ObjectId(data);
      } catch (_error) {
        error = _error;
        return data;
      }
    }
  };

}).call(this);

//# sourceMappingURL=SnapshotManager.map
